Empty List
===========

::

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([], [[1, 2], [1, 2]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

    >>> lazy_matrix_mul([[1, 2], [1, 2]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul([], [[]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (0,) and (1,0) not aligned: 0 (dim 0) != 1 (dim 0)

One Argument or No Arguments
=============================

::

    >>> lazy_matrix_mul()
    array([[1]])

    >>> lazy_matrix_mul([[2]])
    array([[2]])

    >>> lazy_matrix_mul()
    array([[1]])

    >>> lazy_matrix_mul([[1]], [[1]])
    array([[1]])
Not a List or List of Lists
============================

::

    >>> lazy_matrix_mul(1, [[1, 2], [1, 2]])
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[1, 2], [1, 2]], "you")
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([1, 2], [[1, 2], [1, 2]])
    array([3, 6])

    >>> lazy_matrix_mul([[1, 2], [1, 2]], [[1, 2], 4])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

on-Integers/Floats in Matrix Rows
============================

::

    >>> lazy_matrix_mul([[1, 2], ["y", 3]], [[1, 2], [1, 2]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [(3,), 2]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

Different Row Sizes
====================

::

    >>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [2]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2], [2]], [[1, 2], [2]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

Multiplication Errors:

    >>> lazy_matrix_mul([[1, -2, 3]], [[3, -4], [5, 6]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

    >>> lazy_matrix_mul([[1, -2.7]], [[3, 4, -9.9], [5, 6, 7], [10, 11, 12]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)

Integers/Floats
================

::

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

    >>> lazy_matrix_mul([[1, -2]], [[3, -4], [1, 4]])
    array([[  1, -12]])

    >>> lazy_matrix_mul([[1, -2.7]], [[3, -9.9], [5, 6.5]])
    array([[-10.5 , -27.45]])

    >>> lazy_matrix_mul([[1, float('NaN')]], [[3, 4], [float('inf'), 6]])
    array([[nan, nan]])

    >>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
    array([[19, 22,  5],
           [43, 50, 11],
           [43, 50, 11]])

    >>> lazy_matrix_mul([[5, 6, 10], [7, 8]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, 6, 1], [7, 8]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.
