One or no Arguments
====================

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
    >>> bg.integer_validator(12)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Correct Arguments
==================

::

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Incorrect Arguments:

::

    >>> bg.integer_validator("my_int", "ama")
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 12.67)
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", -12)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator(1, 8)

    >>> bg.integer_validator(1, 8, 3)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given
